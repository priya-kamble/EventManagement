version: '3.4'

networks:
  frontend:
  backend:


services:
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y 
      SA_PASSWORD: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "5040:1433"
    container_name: MSSQLContainer   
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "5041:1433"
    container_name: EventsTokenSqlServer
    networks:
      - backend

  event:
    image: eventmanagement/eventapi
    build:
      context: .\EventAPI
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalogDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      ExternalCatalogUrl: http://localhost:7000
      TZ: "America/Los_Angeles"
    ports:
      - "7000:80"
    container_name: EventCatalogAPIContainer  
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: events/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://event
      IdentityUrl: http://192.168.0.11:7801
      CallBackUrl: http://localhost:7500
      CartUrl: http://cart
      TZ: "America/Los_Angeles"
    ports:
      - "7500:80"
    container_name: WebMVCContainer
    networks:
      - frontend
    depends_on:
      - event
      - tokenserver
      - cart

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:7500
      DatabaseServer: tokensqlserver
      DatabaseName: TokenServiceDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "7801:80"
    container_name: TokenServiceAPI
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver

  cart.data:
    image: redis
    ports:
      - "7050:6379"
    container_name: CartData
    networks:
      - backend

  cart:
    image: events/cartapi
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: cart.data
      IdentityUrl: http://192.168.0.11:7801
    ports:
      - "7012:80"
    container_name: EventsCartAPI
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - cart.data