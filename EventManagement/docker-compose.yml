version: '3.4'

networks:
  frontend:
  backend:

services:
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y 
      SA_PASSWORD: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "5040:1433"
    container_name: MSSQLContainer   
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "5041:1433"
    container_name: EventsTokenSqlServer
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend

  event:
    image: eventmanagement/eventapi
    build:
      context: .\EventAPI
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalogDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      ExternalCatalogUrl: http://localhost:7000
      TZ: "America/Los_Angeles"
    ports:
      - "7000:80"
    container_name: EventCatalogAPIContainer  
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: events/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://event
      IdentityUrl: http://192.168.0.13:7801
      CallBackUrl: http://localhost:7500
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_51K706uIPf37S1chqw9wHAC9AtjdpbwU7fqyz1AfRHXjx5efASqC1jm7DeZCMNo8oKK6mhCuIpPMH0YIPND5Lgzae00KPgLg9Y9
      StripePrivateKey: sk_test_51K706uIPf37S1chq7A2kDjfH9btyPPT1u1ucEceenmSxlc6RP9ihmknuByteHUayOz7BZbeU2LKvFwuCo6JmIoFo00RYVJ5eoQ
      TZ: "America/Los_Angeles"
    ports:
      - "7500:80"
    container_name: WebMVCContainer
    networks:
      - frontend
    depends_on:
      - event
      - tokenserver
      - cart
      - order

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:7500
      DatabaseServer: tokensqlserver
      DatabaseName: TokenServiceDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "7801:80"
    container_name: TokenServiceAPI
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver

  cart.data:
    image: redis
    ports:
      - "7030:6379"
    container_name: CartData
    networks:
      - backend

  cart:
    image: events/cartapi
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: cart.data
      IdentityUrl: http://192.168.1.13:7801
    ports:
      - "7012:80"
    container_name: EventsCartAPI
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - cart.data
      - rabbitmq



  order:
    image: events/orderapi  
    build:
      context: .\OrderAPI
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.1.13:7801
      DatabaseServer: mssqlserver
      DatabaseName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: Sa!Event
      TZ: "America/Los_Angeles"
    ports:
      - "7020:80"
    container_name: EventOrderAPIContainer
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      - rabbitmq
